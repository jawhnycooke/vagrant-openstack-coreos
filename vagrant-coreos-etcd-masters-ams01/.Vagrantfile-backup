require 'vagrant-openstack-provider'

Vagrant.configure('2') do |config|

  url = URI.parse('http://discovery.etcd.io/new')
  req = Net::HTTP::Get.new(url.to_s)
  res = Net::HTTP.start(url.host, url.port) {|http|
    http.request(req)
  }
  etcd_discovery_url = res.body

  config.ssh.username = ENV['OS_SSH_USERNAME']
  config.ssh.private_key_path = "~/.ssh/messenger-infra.pem"
  #keypair_name = "messenger-infra"
  #ssh_disabled = "true"

  config.vm.provider :openstack do |os|
    os.username           = ENV['OS_USERNAME']
    os.password           = ENV['OS_PASSWORD']
    os.flavor             = "GP-Large"
    os.image              = "CoreOS"
    os.openstack_auth_url = "https://us-rdu-1.cisco.com:5000/v2.0/tokens"
    os.openstack_network_url = "https://us-rdu-1.cisco.com:9696/v2.0"
    os.openstack_image_url = "https://us-rdu-1.cisco.com:9292/v2.0"
    os.openstack_volume_url = "https://us-rdu-1.cisco.com:8776/v1/e7e394f0992d47c7ab8342842f573d5c"
    os.tenant_name        = ENV['OS_TENANT_NAME']
    os.sync_method        = 'none'
    #os.networks           = "fdce48ad-7707-4b53-8fc7-86d1cbf041cc"
    os.ssh_disabled = "true"
    os.keypair_name = "messenger-infra"


  end

  (1..3).each do |i|
    config.vm.define "instance_#{i}" do |instance|
      instance.vm.provider :openstack do |os|
        os.server_name      = "core-#{i}"
        os.networks           = {id: '0b9c5fe2-d145-4c8f-8486-1018d5b93a78', address: "192.168.1.1#{i}" }
        #os.floating_ip_pool = ENV['OS_FLOATING_IP_POOL']
        os.user_data = "#cloud-config
write_files:
  - path: /etc/resolv.conf
    content: |
      nameserver 8.8.8.8
      nameserver 8.8.4.4

coreos:
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new
    discovery: https://discovery.etcd.io/dae66ed3d61c5c273942a3515b303135
    # multi-region and multi-cloud deployments need to use $public_ipv4
    addr: 192.168.1.1#{i}:4001
    peer-addr: 192.168.1.1#{i}:7001
    #cluster-remove-delay: 300
  fleet:
    metadata: role=services,cabinet=#{i},dc=us-rdu-1
  update:
    reboot-strategy: off
  users:
    - name: zvukmiri
      passwd: $6FMi11BJFsAc
      groups:
        - sudo
        - docker
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: 00-eth0.network
      runtime: true
      content: |
        [Match]
        Name=eth0

        [Network]
        DNS=8.8.8.8,8.8.4.4
        Address=192.168.1.1#{i}/24
        Gateway=192.168.1.1" 
      end
    end
  end 
end
